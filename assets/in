#!/bin/sh

# Resource Impl: http://concourse.ci/implementing-resources.html#in:-fetch-a-given-resource
set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

dest=$1

if [ -z "$dest" ]; then
  echo "usage: $0 <path/to/volume>"
  exit 1
fi
#######################################

payload=$(cat)
bucket=$(printf '%s\n' "$payload" | jq -r '.source.bucket // ""')
path=$(printf '%s\n' "$payload" | jq -r '.source.path // ""')
options=$(printf '%s\n' "$payload" | jq -r '.source.options // [] | join(" ")')
AWS_ACCESS_KEY_ID=$(printf '%s\n' "$payload" | jq -r '.source.access_key_id // ""')
AWS_SECRET_ACCESS_KEY=$(printf '%s\n' "$payload" | jq -r '.source.secret_access_key // ""')
AWS_DEFAULT_REGION=$(printf '%s\n' "$payload" | jq -r '.source.region // ""')

# Due to precedence rules, must be unset to support AWS IAM Roles.
if [ -n "$AWS_ACCESS_KEY_ID" ] && [ -n "$AWS_SECRET_ACCESS_KEY" ]; then
  export AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY
fi

# Export AWS_DEFAULT_REGION if set
[ -n "$AWS_DEFAULT_REGION" ] && export AWS_DEFAULT_REGION

echo "Downloading from S3..."
eval "set -- $options" # transform options list into argument vector elements
aws s3 sync "s3://$bucket/$path" "$dest" "$@"
echo "...done."

. "$(dirname "$0")/emit.sh" >&3
